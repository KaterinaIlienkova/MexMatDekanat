from telegram import Update
from telegram.ext import CallbackContext, ConversationHandler

from source.database import SessionLocal
from source.models import DocumentRequest, DocumentType
async def confirm_document_request(update: Update, context: CallbackContext):
    """–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–æ–∫—É–º–µ–Ω—Ç–∞."""
    query = update.callback_query
    await query.answer()

    try:
        # –û—á—ñ–∫—É—î–º–æ —Ñ–æ—Ä–º–∞—Ç: doc_confirm_<typeid>_<studentid>
        parts = query.data.split('_')
        if len(parts) != 4:
            raise ValueError(f"–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç callback_data: {query.data}")

        _, _, document_type_id_str, student_id_str = parts
        document_type_id = int(document_type_id_str)
        student_id = int(student_id_str)

        with SessionLocal() as db:
            new_request = DocumentRequest(
                StudentID=student_id,
                TypeID=document_type_id,
                Status='pending'
            )

            db.add(new_request)
            db.commit()
            db.refresh(new_request)

            document_type = db.query(DocumentType).filter(DocumentType.TypeID == document_type_id).first()

            await query.edit_message_text(
                f"‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç **'{document_type.TypeName}'** —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–∞!\n"
                f"üìÑ –ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: {new_request.RequestID}\n"
                f"‚è≥ –°—Ç–∞—Ç—É—Å: –í –æ–±—Ä–æ–±—Ü—ñ"
            )

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∑–∞—è–≤–∫–∏: {e}")
        await query.edit_message_text(
            "‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∑–∞—è–≤–∫–∏. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –¥–µ–∫–∞–Ω–∞—Ç—É."
        )
